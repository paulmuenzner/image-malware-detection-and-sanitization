import os
import os.path
import sys

import pytest

sys.path.append(
    os.path.abspath(
        os.path.join(
            os.path.dirname(__file__), os.path.pardir, os.path.pardir, os.path.pardir
        )
    )
)


from utils.start_end_validate import string_ends_with


@pytest.mark.parametrize(
    "value, end_string, expected_result",
    [
        ("hello world", "world", True),
        ("python", "on", True),
        ("example", "ample", True),
        ("programming", "python", False),
        ("test", "testing", False),
        ("", "", True),
        ("hello", "", True),
    ],
)
def test_string_ends_with(value, end_string, expected_result):
    result = string_ends_with(value, end_string)
    assert (
        result == expected_result
    ), f"Expected {expected_result}, but got {result} for value '{value}' and end_string '{end_string}'"
