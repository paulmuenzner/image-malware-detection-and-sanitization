from typing import Dict, List, Union

from interfaces.occurrence_validation import OccurrenceList


def check_chunk_order_step_4_5(
    chunk_name_to_check: str,
    indexes_of_chunk_to_check: List[int],
    must_be_after_chunk: List[str],
    chunk_positions: OccurrenceList,
) -> List[Dict[str, str]]:
    wrong_positions = []

    # Loop all chunk names which must be before current chunk
    # must_be_after_chunk (eg. "after": ["tEXt", "hIST", "cHRM"]) lists all chunks names where current chunk must be positioned after in image file
    # Each key is one chunk name which must be positioned before
    for key in must_be_after_chunk:

        # Check if this chunk which must be positioned before exists in current to check file. All in file existing chunks are listed in 'chunk_positions'
        # With key, we already have name but not position values
        # Filter name and indexes (position in file) of chunk which must be before chunk
        filter_from_chunk_positions = [
            chunk_positions
            for chunk_positions in chunk_positions
            if chunk_positions["name"] == key
        ]

        if not filter_from_chunk_positions:
            continue  # Skip if the chunk which must be positioned before is not found

        # Name (from "after" list) of chunk and its positions where current chunk of this loop step must be positioned after
        name: str = filter_from_chunk_positions[0]["name"]
        indexes_of_before_chunk: List[int] = filter_from_chunk_positions[0]["indexes"]

        # Loop and check each index where chunk which must be positioned before
        for one_index_of_before in indexes_of_before_chunk:
            # Current chunk might appear multiple times too. Because of that we have to check each and loop again
            for one_index_of_current_chunk in indexes_of_chunk_to_check:
                # Now, we are able to compare positions
                if one_index_of_before > one_index_of_current_chunk:
                    wrong_positions.append(
                        {
                            "name": chunk_name_to_check,
                            "indexes": indexes_of_chunk_to_check,
                            "error": f"4th Verification Step: Chunk '{chunk_name_to_check}' must only appear after chunk {name}. But '{chunk_name_to_check}' appears at position {one_index_of_current_chunk} which is before chunk '{name}' with position of {one_index_of_before}.",
                        }
                    )

    return wrong_positions
