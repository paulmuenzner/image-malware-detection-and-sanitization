import os
import os.path
import sys
from typing import Dict

sys.path.append(
    os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir))
)
from interfaces.image_formats_possible import ImageFormat
from interfaces.signature_list import SignatureListInterface
from utils.is_extension_valid import is_extension_valid
from utils.signature_list_png import PNG_SIGNATURES


# Select signature library depending on file type. File will be scanned depending on file type.
def select_signature_lib(extension: str) -> SignatureListInterface:
    try:
        # Select
        switch_dict = {
            "png": PNG_SIGNATURES,
        }
        case_function = switch_dict.get(extension)
        if case_function is not None:
            return case_function
        else:
            raise ValueError(
                f"No signature library available for your extension: {extension}"
            )
    except Exception as e:
        raise ValueError(f"Exception raised in 'select_signature_lib'. Error: {e}.")


## Example Usage:
# try:
#     result = select_signature_lib("png")
#     print(result)
# except ValueError as e:
#     print(e)
