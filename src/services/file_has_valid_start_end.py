import os
import os.path
import sys
import traceback

sys.path.append(
    os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir))
)


from utils.get_file_extension import get_file_extension
from utils.is_extension_valid import is_extension_valid
from utils.select_signature_lib import select_signature_lib
from utils.select_start_end_signatures import select_start_end_signatures
from utils.start_end_validate import string_ends_with, string_starts_with


def file_has_valid_start_end(string_to_check: str, path: str) -> tuple[bool, bool]:
    try:
        # Get file extension from path. Raise error if not possible
        file_extension = get_file_extension(path)

        # Validate if extension covered here and therefore permitted
        extension = is_extension_valid(file_extension)
        if extension is False:
            raise KeyError(
                f"Invalid extension provided in 'select_signature_lib'. Extension provided: {extension}. Please provide a valid file format."
            )

        # Select file-related signature library
        signature_lib = select_signature_lib(file_extension)

        # Retrieve start and end signature related to file type. Raise error if not possible
        start_end_signatures = select_start_end_signatures(signature_lib)
        if start_end_signatures["success"] == "False":
            error = start_end_signatures["error"]
            raise ValueError(
                f"start_end_signatures cannot retrieve values. Error: {error}"
            )

        # Validate if start and end is correct in file
        is_start_valid = string_starts_with(
            string_to_check, start_end_signatures["start"]
        )
        is_end_valid = string_ends_with(string_to_check, start_end_signatures["end"])

        # Return
        return is_start_valid, is_end_valid
    except Exception as e:
        traceback.print_exc()
        raise Exception(f"An error occurred: {e}")


# Example Usage:
# image_path = "src/assets/test.png"
# file_extension = file_has_valid_start_end("dfdf", "png")
# print(file_extension)
